name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
      - "!dependabot/**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container-context: ["docker-default", "docker-rootless", "podman"]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
      with:
        disable-sudo: ${{ matrix.container-context != 'docker-rootless' }}
        egress-policy: block
        allowed-endpoints: >
          auth.docker.io:443
          dl-cdn.alpinelinux.org:443
          download.docker.com:443
          files.pythonhosted.org:443
          get.docker.com:443
          github.com:443
          objects.githubusercontent.com:443
          production.cloudflare.docker.com:443
          pypi.org:443
          quay.io:443
          registry-1.docker.io:443
    
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    # Maybe one day GitHub will handle this for us using path filters, but for now we need to skip all of the steps that would normally run for non-code changes ourselves.
    # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
    - name: Detect Changed Files
      id: changed-files
      uses: tj-actions/changed-files@40853de9f8ce2d6cfdc73c1b96f14e22ba44aec4 # v45.0.0
      with:
        files_yaml: |
          paths:
            - "**"
            - "!*.md"
            - "!.github/**"
            - ".github/workflows/*.yml"
    
    - name: Use Rootless Docker
      if: ${{ matrix.container-context == 'docker-rootless' && steps.changed-files.outputs.paths_any_changed == 'true' }}
      uses: ScribeMD/rootless-docker@6bd157a512c2fafa4e0243a8aa87d964eb890886 # 0.2.2

    - name: Install Podman Compose
      if: ${{ matrix.container-context == 'podman' && steps.changed-files.outputs.paths_any_changed == 'true' }}
      # Podman in the GitHub runner is out of date, so we either need to upgrade it ourselves or install an older version of podman-compose.
      # https://github.com/containers/podman-compose/issues/980#issuecomment-2199531338
      run: |
        echo 'podman-compose == 1.0.6 --hash=sha256:48c92e6cdac1732422c6cfa803d8a905a61be4119dc0d41f9ed42c66826e9a78' > /tmp/requirements.txt
        echo 'python-dotenv == 1.0.1 --hash=sha256:f7b63ef50f1b690dddf550d03497b66d609393b40b564ed0d674909a68ebf16a' >> /tmp/requirements.txt
        pip3 install --require-hashes --requirement /tmp/requirements.txt
        rm /tmp/requirements.txt

    - name: Run Tests
      if: ${{ steps.changed-files.outputs.paths_any_changed == 'true' }}
      run: |
        grep -e '^#!/bin/sh' --exclude-dir=.git -lR | xargs chmod --changes +x
        COMPOSE_ENGINE='${{ contains(matrix.container-context, 'podman') && 'podman-compose' || 'docker compose' }}' TESTING_ENVIRONMENT_DIR='/tmp/dockerfile-user-mirror/' ./ci