name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
      - "!dependabot/**"
    tags:
      - "release-**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read

jobs:
  changed-files:
    name: Detect Changed Files
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: CI Files Changed
      id: ci-files-changed
      uses: tj-actions/changed-files@48d8f15b2aaa3d255ca5af3eba4870f807ce6b3c # v45.0.2
      with:
        files_yaml: |
          paths:
            - "**"
            - "!*.md"
            - "!.github/**"
            - ".github/workflows/*.yml"

    - name: Release Files Changed
      id: release-files-changed
      uses: tj-actions/changed-files@48d8f15b2aaa3d255ca5af3eba4870f807ce6b3c # v45.0.2
      with:
        files_yaml: |
          paths:
            - "make-release"
            - "src/image/entrypoint"
            - "src/user-mirror"

    - name: Set GITHUB_OUTPUT
      run: |
        echo "RUN_CI=${{ github.ref_type == 'tag' || (github.ref_type != 'tag' && steps.ci-files-changed.outputs.paths_any_changed == 'true') }}" >> "$GITHUB_OUTPUT"
        echo "RUN_TAG_FOR_RELEASE=${{ github.ref == 'refs/heads/main' && steps.release-files-changed.outputs.paths_any_changed == 'true' }}" >> "$GITHUB_OUTPUT"

  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    needs: changed-files
    if: ${{ needs.changed-files.outputs.RUN_CI == 'true' }}
    strategy:
      matrix:
        container-context: ["docker-default", "docker-rootless", "podman"]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        disable-sudo: ${{ matrix.container-context != 'docker-rootless' }}
        egress-policy: block
        allowed-endpoints: >
          auth.docker.io:443
          dl-cdn.alpinelinux.org:443
          download.docker.com:443
          files.pythonhosted.org:443
          get.docker.com:443
          github.com:443
          objects.githubusercontent.com:443
          production.cloudflare.docker.com:443
          pypi.org:443
          quay.io:443
          registry-1.docker.io:443
    
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    
    - name: Use Rootless Docker
      if: ${{ matrix.container-context == 'docker-rootless' }}
      uses: ScribeMD/rootless-docker@6bd157a512c2fafa4e0243a8aa87d964eb890886 # 0.2.2

    - name: Install Podman Compose
      if: ${{ matrix.container-context == 'podman' }}
      # Podman in the GitHub runner is out of date, so we either need to upgrade it ourselves or install an older version of podman-compose.
      # https://github.com/containers/podman-compose/issues/980#issuecomment-2199531338
      run: |
        echo 'podman-compose == 1.0.6 --hash=sha256:48c92e6cdac1732422c6cfa803d8a905a61be4119dc0d41f9ed42c66826e9a78' > /tmp/requirements.txt
        echo 'python-dotenv == 1.0.1 --hash=sha256:f7b63ef50f1b690dddf550d03497b66d609393b40b564ed0d674909a68ebf16a' >> /tmp/requirements.txt
        pip3 install --require-hashes --requirement /tmp/requirements.txt
        rm /tmp/requirements.txt

    - name: Docker Cache
      id: docker-cache
      uses: ScribeMD/docker-cache@fb28c93772363301b8d0a6072ce850224b73f74e # 0.5.0
      with:
        key: docker-${{ runner.os }}-${{ hashFiles('./images/alpine/Dockerfile', './images/busybox/Dockerfile', './images/debian/Dockerfile', './images/ubuntu/Dockerfile') }}

    - name: Run Tests
      run: |
        grep -e '^#!/bin/sh' --exclude-dir=.git -lR | xargs chmod --changes +x
        COMPOSE_ENGINE='${{ contains(matrix.container-context, 'podman') && 'podman-compose' || 'docker compose' }}' TESTING_ENVIRONMENT_DIR='/tmp/docker-user-mirror/' ./ci

    - name: Test Release Script
      run: |
        chmod --changes +x ./make-release
        ./make-release

  tag-for-release:
    name: Tag for Release
    runs-on: ubuntu-latest
    needs: [changed-files, ci]
    environment: production
    if: ${{ needs.changed-files.outputs.RUN_TAG_FOR_RELEASE == 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        fetch-depth: 0
        fetch-tags: true
        filter: tree:0

    - name: Get Latest Release Tag
      run: echo "LATEST_RELEASE_TAG=$(git tag --list --sort=-v:refname release-* | head -1)" >> $GITHUB_ENV

    - name: Tag Release
      uses: actions/github-script@v7
      env:
        LATEST_RELEASE_TAG: ${{ env.LATEST_RELEASE_TAG }}
      with:
        github-token: ${{ secrets.PAT }}
        script: |
          const latestReleaseTag = process.env.LATEST_RELEASE_TAG;

          if (latestReleaseTag.length > 0) {
            const incrementReleaseTag = latestReleaseTag.replace(/(\d+)([^\.]*)$/, (_, x, y) => (Number(x) + 1) + y);

            if (incrementReleaseTag.length >= latestReleaseTag.length && latestReleaseTag !== incrementReleaseTag) {
              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${incrementReleaseTag}`,
                sha: context.sha
              });
            }
          }

  cd:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    needs: ci
    environment: production
    if: ${{ startsWith(github.ref, 'refs/tags/release-') }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            uploads.github.com:443

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Extract Version
        run: echo "RELEASE_VERSION=$(echo '${{ github.ref }}' | cut -c 19-)" >> $GITHUB_ENV

      - name: Generate Release Artifacts
        run: |
          chmod --changes +x ./make-release
          ./make-release

      - name: Create Release
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5 # v1.14.0
        with:
          artifactErrorsFailBuild: true
          artifacts: "release/entrypoint,release/user-mirror"
          generateReleaseNotes: true
          name: Release ${{ env.RELEASE_VERSION }}
          token: ${{ secrets.PAT }}