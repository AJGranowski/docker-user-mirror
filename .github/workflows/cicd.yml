name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    tags:
      - "**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read

jobs:
  workflow-filter:
    name: Workflow Filter
    runs-on: ubuntu-latest
    outputs:
      run-ci: ${{ github.event_name == 'workflow_dispatch' || github.ref_type == 'tag' || steps.ci-files-changed.outputs.paths_any_modified == 'true' }}
      run-tag-for-release: ${{ github.ref == 'refs/heads/main' && steps.tag-check.outputs.is-commit-tagged != 'true' && steps.commit-comment.outputs.skip-auto-release != 'true' && steps.release-files-changed.outputs.paths_any_modified == 'true' }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check for Tag
        id: tag-check
        run: |
          if git describe --contains "$GITHUB_SHA"; then
            echo 'is-commit-tagged=true' >> "$GITHUB_OUTPUT";
          else
            echo 'is-commit-tagged=false' >> "$GITHUB_OUTPUT";
          fi

      - name: CI Files Changed
        id: ci-files-changed
        if: ${{ github.event_name != 'workflow_dispatch' && github.ref_type != 'tag' }}
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
        with:
          files_yaml: |
            paths:
              - "**"
              - "!*.md"
              - "!.github/**"
              - ".github/workflows/*.yml"

      - name: Check for \#skip-auto-release
        id: commit-comment
        run: |
          case "$(git show -s --format=%b "$GITHUB_REF")" in
            *#skip-auto-release*) echo 'skip-auto-release=true' >> "$GITHUB_OUTPUT";;
          esac

      - name: Release Source Files Changed
        id: release-files-changed
        if: ${{ github.event_name != 'workflow_dispatch' && github.ref_type != 'tag' }}
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
        with:
          files_yaml: |
            paths:
              - "make-release"
              - "src/image/entrypoint"
              - "src/user-mirror"

  ci:
    name: Continuous Integration
    runs-on: ubuntu-22.04
    needs: workflow-filter
    if: ${{ needs.workflow-filter.outputs.run-ci == 'true' }}
    strategy:
      matrix:
        container-context: ["docker-default", "docker-rootless", "podman"]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: ${{ matrix.container-context == 'docker-default' }}
          egress-policy: block
          allowed-endpoints: >
            auth.docker.io:443
            azure.archive.ubuntu.com:80
            dl-cdn.alpinelinux.org:443
            download.docker.com:443
            files.pythonhosted.org:443
            get.docker.com:443
            github.com:443
            objects.githubusercontent.com:443
            production.cloudflare.docker.com:443
            pypi.org:443
            registry-1.docker.io:443
            release-assets.githubusercontent.com:443

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Use Rootless Docker
        if: ${{ matrix.container-context == 'docker-rootless' }}
        uses: ScribeMD/rootless-docker@6bd157a512c2fafa4e0243a8aa87d964eb890886 # 0.2.2

      - name: Install Podman Compose
        if: ${{ matrix.container-context == 'podman' }}
        # Podman in the GitHub runner is out of date, so we either need to upgrade it ourselves or install an older version of podman-compose.
        # https://github.com/containers/podman-compose/issues/980#issuecomment-2199531338
        run: |
          sudo apt-get install python3-dotenv
          echo 'podman-compose == 1.0.6 --hash=sha256:48c92e6cdac1732422c6cfa803d8a905a61be4119dc0d41f9ed42c66826e9a78' > /tmp/requirements.txt
          pip3 install --require-hashes --requirement /tmp/requirements.txt
          rm /tmp/requirements.txt

      - name: Docker Cache
        id: docker-cache
        uses: ScribeMD/docker-cache@fb28c93772363301b8d0a6072ce850224b73f74e # 0.5.0
        with:
          key: ${{ matrix.container-context }}-${{ runner.os }}-${{ hashFiles('./images/**/Dockerfile') }}

      - name: Run Tests
        run: |
          grep -e '^#!/bin/sh' --exclude-dir=.git -lR | xargs chmod --changes +x
          COMPOSE_ENGINE='${{ contains(matrix.container-context, 'podman') && 'podman-compose' || 'docker compose' }}' TESTING_ENVIRONMENT_DIR='/tmp/docker-user-mirror/' ./ci

      - name: Test Release Script
        run: |
          chmod --changes +x ./make-release
          ./make-release

  ci-required-checks:
    name: Required Checks
    runs-on: ubuntu-latest
    needs: ci
    if: always()
    steps:
    - run: ${{ !contains(needs.*.result, 'failure') }}

  release-bump:
    name: Bump Release Tag
    runs-on: ubuntu-latest
    needs: [workflow-filter, ci, ci-required-checks]
    environment: release-ruleset-bypass
    concurrency:
      group: release-bump
    env:
      RELEASE_REGEX: ^release-(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)$

    if: ${{ github.ref == 'refs/heads/main' && needs.check-release-files.outputs.changed == 'true' }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          api.github.com:443

    - name: Generate Elevated Workflow token
      uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
      id: release-ruleset-bypass-token
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Get Preceding Release Tag
      id: preceding-tag
      uses: AJGranowski/preceding-tag-action@50a89255e7e2173eab3d48941b9419e5d5dc9aaa # v1.0.5
      with:
        regex: ${{ env.RELEASE_REGEX }}

    - name: Increment And Create Release Tag
      id: increment-tag
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      env:
        PRECEDING_RELEASE_TAG: ${{ steps.preceding-tag.outputs.tag }}
        RELEASE_REGEX: ${{ env.RELEASE_REGEX }}
      with:
        github-token: ${{ steps.release-ruleset-bypass-token.outputs.token }}
        script: |
          core.info(`PRECEDING_RELEASE_TAG: ${process.env.PRECEDING_RELEASE_TAG}`);
          core.info(`RELEASE_REGEX: ${process.env.RELEASE_REGEX}`);
          const regexp = new RegExp(process.env.RELEASE_REGEX);
          const groups = process.env.PRECEDING_RELEASE_TAG.match(regexp).groups;

          // Convert string to number
          Object.keys(groups).forEach((key) => {
            let value = groups[key];
            let parsedValue = parseFloat(value);
            if (parsedValue.toString() === value) groups[key] = parsedValue;
          });

          const bumpedTag = `release-${groups.major}.${groups.minor}.${groups.patch + 1}`;
          if (!regexp.test(bumpedTag)) {
            throw new Error(`Bumped tag does not match RELEASE_REGEX "${bumpedTag}"`)
          }

          const bumpedRef = `refs/tags/${bumpedTag}`;

          await github.rest.git.getRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: bumpedRef
          }).then((response) => {
            throw new Error(`Tag already exists: ${bumpedRef}`);
          }).catch((e) => {
            if (e != null && e.status !== 404) throw e;
          });

          await github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: bumpedRef,
            sha: process.env.GITHUB_SHA
          });

          core.info(`Created tag: ${bumpedRef}`);

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ci, ci-required-checks]
    permissions:
      contents: write # Needed to create a release https://docs.github.com/en/rest/releases/releases#create-a-release

    concurrency:
      group: release-${{ github.ref }}
      cancel-in-progress: true

    if: ${{ startsWith(github.ref, 'refs/tags/release-') }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            uploads.github.com:443

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Get Latest Release Tag
        id: latest-release-tag
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            core.setOutput("tag", await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            }).then((response) => {
              return response.data.tag_name
            }).catch((e) => {
              if (e != null && e.status !== 404) return "";
            }));

      - name: Compare Against Latest Release
        id: is-latest-release
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        env:
          LATEST_RELEASE_TAG: ${{ steps.latest-release-tag.outputs.tag }}
        with:
          script: |
            const result = (() => {
              const toVersionArray = (str) => str.split(/[^\d]+/).filter((x) => parseInt(x).toString() === x).map((x) => parseInt(x));
              const thisReleaseTag = toVersionArray(process.env.GITHUB_REF_NAME);
              core.info(`This Release Tag Components: ${JSON.stringify(thisReleaseTag)}`);
              const latestReleaseTag = toVersionArray(process.env.LATEST_RELEASE_TAG);
              core.info(`Latest Release Tag Components: ${JSON.stringify(latestReleaseTag)}`);

              const minLength = Math.min(thisReleaseTag.length, latestReleaseTag.length);
              for (let i = 0; i < minLength; i++) {
                const difference = thisReleaseTag[i] - latestReleaseTag[i];
                if (difference > 0) return true;
                if (difference < 0) return false;
              }
              if (thisReleaseTag.length >= latestReleaseTag.length) return true;
              return false;
            })();

            core.info(`Result: ${result}`);
            core.setOutput("is-latest", result);
      
      - name: Extract Version
        id: extract-version
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            core.setOutput("version", process.env.GITHUB_REF.replace("refs/tags/release-", ""));

      - name: Generate Release Artifacts
        run: |
          chmod --changes +x ./make-release
          ./make-release

      - name: Create Release
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b # v1.20.0
        with:
          artifactErrorsFailBuild: true
          artifacts: "release/entrypoint,release/user-mirror,release/version"
          draft: true
          generateReleaseNotes: true
          immutableCreate: true
          makeLatest: ${{ steps.is-latest-release.outputs.is-latest == 'true' }}
          name: Release ${{ steps.extract-version.outputs.version }}
