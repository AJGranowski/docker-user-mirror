#!/bin/sh
set -eC;

get_mount_destinations() {
    if $COMPOSE_ENGINE --progress quiet create >/dev/null 2>&1; then
        $CONTAINER_ENGINE inspect --format '{{range .Mounts}}"{{print .Destination}}" {{end}}' \
            "$($COMPOSE_ENGINE --progress quiet ps -a --format '{{.ID}}')";
    fi
}

# Parse options
while [ $# -gt 0 ]; do
    case $1 in
        --docker) ;;
        --podman)
            o_podman=true;
            ;;
        --)
            shift;
            break;
            ;;
        *)
            printf 'Unknown option %s\n' $1 >&2;
            exit 1;
            break;
    esac
    shift;
done

if [ "$o_podman" = true ]; then
    CONTAINER_ENGINE='podman';
    if podman compose version >/dev/null 2>&1; then
        COMPOSE_ENGINE='podman compose';
    elif podman-compose version >/dev/null 2>&1; then
        COMPOSE_ENGINE='podman-compose';
    else
        printf 'Could not find a Podman Compose engine.\n' >&2;
        exit 1;
    fi
else
    CONTAINER_ENGINE='docker';
    if docker compose version >/dev/null 2>&1; then
        COMPOSE_ENGINE='docker compose'
    elif docker-compose version >/dev/null 2>&1; then
        COMPOSE_ENGINE='docker-compose'
    else
        printf 'Could not find a Docker Compose engine.\n' >&2;
        exit 1;
    fi
fi

DESTINATIONS="$(get_mount_destinations)";
if [ -n "$DESTINATIONS" ]; then
    printf -- "--env CHOWN='%s' " "$DESTINATIONS";
fi

if [ "$o_podman" = true ] || docker info -f '{{println .SecurityOptions}}' | grep 'rootless' 1>/dev/null; then
    printf -- '--env GID=%s ' '0';
    printf -- '--env GROUP=%s ' 'root';
    printf -- '--env UID=%s ' '0';
    printf -- '--env USER=%s ' 'root';
else
    printf -- '--env GID=%s ' "$(id -g)";
    printf -- '--env GROUP=%s ' "$(id -gn)";
    printf -- '--env UID=%s ' "$(id -u)";
    printf -- '--env USER=%s ' "$(id -un)";
fi